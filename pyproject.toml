[tool.poetry]
name = "great_expectations_cloud"
version = "0.0.2dev"
description = "Great Expectations Cloud"
authors = ["Your Name <you@example.com>"]
readme = "README.md"
license = "Apache-2.0"

[tool.poetry.dependencies]
python = ">=3.8,<3.12"
great-expectations = "^0.17.10"
pika = "^1.3.1"
sqlalchemy = ">=1.4.49"

[tool.poetry.group.dev.dependencies]
black = "^23.7.0"
invoke = "^2.2.0"
mypy = "~1.5.1"
pre-commit = "^3.3.3"
pytest = "^7.4.0"
pytest-mock = "*"
responses = "^0.23.1"
ruff = "==0.0.284"
tomli = "^2.0.1"

[tool.poetry.scripts]
gx-agent = 'great_expectations_cloud.agent:run_agent'

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
style = "semver"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
python_version = "3.8"
plugins = ["pydantic.mypy"]
files = ["great_expectations_cloud/", "tests/", "tasks.py"]
warn_unused_configs = true
ignore_missing_imports = true
follow_imports = 'normal'
warn_redundant_casts = true
show_error_codes = true
enable_error_code = ['ignore-without-code']
# The following list of codes are globally ignored, do not add to this list
disable_error_code = [
    # annotation-unchecked are 'warning notes', not errors and won't cause mypy to fail
    # but it does create a lot of noise in the CI mypy step.
    # https://mypy-lang.blogspot.com/2022/11/mypy-0990-released.html
    'annotation-unchecked',
]

[tool.black]
target-version = ["py38", "py39", "py310", "py311"]
line-length = 100

[tool.ruff]
target-version = "py38"
# TODO: change this back to black default of 88 if desired
line-length = 100
select = [
    # https://beta.ruff.rs/docs/rules/#pyflakes-f
    "F", # Pyflakes
    # https://beta.ruff.rs/docs/rules/#pycodestyle-e-w
    "E", # pycodestyle
    "W", # Warning
    # https://beta.ruff.rs/docs/rules/#flake8-comprehensions-c4
    # https://beta.ruff.rs/docs/rules/#mccabe-c90
    "C", # Complexity (mccabe+) & comprehensions
    # https://beta.ruff.rs/docs/rules/#pyupgrade-up
    "UP", # pyupgrade
    # https://beta.ruff.rs/docs/rules/#isort-i
    "I", # isort
    # https://beta.ruff.rs/docs/rules/#flake8-type-checking-tch
    "TCH", # flake8-type-checking-tch
    # https://beta.ruff.rs/docs/rules/#flake8-tidy-imports-tid
    "TID", # flake8-tidy-imports
    # https://beta.ruff.rs/docs/rules/#flake8-pyi-pyi
    "PYI", # flake8-pyi - type stub files
    # https://beta.ruff.rs/docs/rules/#flake8-use-pathlib-pth
    "PTH", # use-pathlib - use pathlib for os.path and glob operations
    # https://beta.ruff.rs/docs/rules/#flake8-bugbear-b
    "B", # bugbear - common python bugs & design issues
    # https://beta.ruff.rs/docs/rules/#flake8-datetimez-dtz
    "DTZ", # flake8-datetimez-dtz - prevent use of tz naive datetimes
    # https://beta.ruff.rs/docs/rules/#pylint-pl
    "PL", # pylint
    # https://beta.ruff.rs/docs/rules/unused-noqa/
    "RUF100", # unused-noqa
]
ignore = [
    # https://beta.ruff.rs/docs/rules/#flake8-type-checking-tch
    # minimal cost for standard lib imports; keep this disabled
    "TCH003", # typing-only-standard-library-import
    # gives false positives if we use try imports and type-checking import
    "TCH004", # runtime-import-in-type-checking-block
    "TID252", # Relative imports from parent modules are banned
    # https://beta.ruff.rs/docs/rules/#flake8-use-pathlib-pth
    "PTH123", # pathlib-open - this would force pathlib usage anytime open or with open was used.
]

[tool.ruff.flake8-type-checking]
# pydantic models use annotations at runtime
runtime-evaluated-base-classes = [
    # NOTE: ruff is unable to detect that these are subclasses of pydantic.BaseModel
    "pydantic.BaseModel",
    "great_expectations.datasource.fluent.fluent_base_model.FluentBaseModel",
    "great_expectations.datasource.fluent.interfaces.Datasource",
    "great_expectations.datasource.fluent.sql_datasource.SQLDatasource",
]
runtime-evaluated-decorators = ["pydantic.dataclasses.dataclass"]

[tool.ruff.mccabe]
max-complexity = 10

[tool.ruff.per-file-ignores]
"__init__.py" = [
    "F401", # unused import
    "F403", # star imports
]
